{"version":3,"sources":["Components/Chart/index.js"],"names":["Chart","props","useState","data","setData","useEffect","temp","labels","datasets","label","tag","backgroundColor","fill","i","length","val","indexOf","push","randomColor","Math","floor","random","toString","pos","Display","Charts","chartType","options","maintainAspectRatio","legend","display","title","text","fontSize","fontColor","height","width"],"mappings":"+IAqDeA,UAlDD,SAACC,GAAW,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,KAGvBC,qBAAU,WAYR,IAXA,IAAIC,EAAO,CACTC,OAAQ,GACRC,SAAU,CACR,CACEC,MAAOR,EAAMS,IACbP,KAAM,GACNQ,gBAAiB,GACjBC,MAAM,KAIHC,EAAI,EAAGA,EAAIZ,EAAME,KAAKW,OAAQD,IAAK,CAC1C,IAAIE,EAAMd,EAAME,KAAKU,GAAGZ,EAAMS,MACI,IAA9BJ,EAAKC,OAAOS,QAAQD,KACtBT,EAAKC,OAAOU,KAAKF,GACjBT,EAAKE,SAAS,GAAGL,KAAKc,KAAK,IAE7B,IAAIC,EAAc,IAAMC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,IAClEC,EAAMjB,EAAKC,OAAOS,QAAQD,GAC9BT,EAAKE,SAAS,GAAGL,KAAKoB,KACtBjB,EAAKE,SAAS,GAAGG,gBAAgBM,KAAKC,GAGxCd,EAAQ,eAAKE,MACZ,CAACL,EAAME,KAAMF,EAAMS,MAEtB,IAAMc,EAAUC,EAAOxB,EAAMyB,WAC7B,OACE,kBAACF,EAAD,CACErB,KAAMA,EACNwB,QAAS,CACPC,qBAAqB,EACrBC,OAAQ,CAAEC,QAA6B,aAApB7B,EAAMyB,WACzBK,MAAO,CACLD,SAAS,EACTE,KAAM/B,EAAM8B,MACZE,SAAU,GACVC,UAAW,UAGfC,OAAQ,IACRC,MAAO","file":"static/js/4.f69374de.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport * as Charts from \"react-chartjs-2\";\r\n\r\nconst Chart = (props) => {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    let temp = {\r\n      labels: [],\r\n      datasets: [\r\n        {\r\n          label: props.tag,\r\n          data: [],\r\n          backgroundColor: [],\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n    for (var i = 0; i < props.data.length; i++) {\r\n      var val = props.data[i][props.tag];\r\n      if (temp.labels.indexOf(val) === -1) {\r\n        temp.labels.push(val);\r\n        temp.datasets[0].data.push(0);\r\n      }\r\n      var randomColor = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n      var pos = temp.labels.indexOf(val);\r\n      temp.datasets[0].data[pos]++;\r\n      temp.datasets[0].backgroundColor.push(randomColor);\r\n    }\r\n\r\n    setData({ ...temp });\r\n  }, [props.data, props.tag]);\r\n\r\n  const Display = Charts[props.chartType];\r\n  return (\r\n    <Display\r\n      data={data}\r\n      options={{\r\n        maintainAspectRatio: false,\r\n        legend: { display: props.chartType === \"Doughnut\" },\r\n        title: {\r\n          display: true,\r\n          text: props.title,\r\n          fontSize: 20,\r\n          fontColor: \"black\",\r\n        },\r\n      }}\r\n      height={300}\r\n      width={100}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"],"sourceRoot":""}